export_library
{
    sdl_scancode_to_keycode :: fn (x: u32) -> u32;

    sdl_keycode :: type_alias = u32;
    SDLK_SCANCODE_MASK          :: define u32 = (1<<30);
    SDLK_UNKNOWN                :: define u32 = 0x00000000;
    SDLK_RETURN                 :: define u32 = 0x0000000d;
    SDLK_ESCAPE                 :: define u32 = 0x0000001b;
    SDLK_BACKSPACE              :: define u32 = 0x00000008;
    SDLK_TAB                    :: define u32 = 0x00000009;
    SDLK_SPACE                  :: define u32 = 0x00000020;
    SDLK_EXCLAIM                :: define u32 = 0x00000021;
    SDLK_DBLAPOSTROPHE          :: define u32 = 0x00000022;
    SDLK_HASH                   :: define u32 = 0x00000023;
    SDLK_DOLLAR                 :: define u32 = 0x00000024;
    SDLK_PERCENT                :: define u32 = 0x00000025;
    SDLK_AMPERSAND              :: define u32 = 0x00000026;
    SDLK_APOSTROPHE             :: define u32 = 0x00000027;
    SDLK_LEFTPAREN              :: define u32 = 0x00000028;
    SDLK_RIGHTPAREN             :: define u32 = 0x00000029;
    SDLK_ASTERISK               :: define u32 = 0x0000002a;
    SDLK_PLUS                   :: define u32 = 0x0000002b;
    SDLK_COMMA                  :: define u32 = 0x0000002c;
    SDLK_MINUS                  :: define u32 = 0x0000002d;
    SDLK_PERIOD                 :: define u32 = 0x0000002e;
    SDLK_SLASH                  :: define u32 = 0x0000002f;
    SDLK_0                      :: define u32 = 0x00000030;
    SDLK_1                      :: define u32 = 0x00000031;
    SDLK_2                      :: define u32 = 0x00000032;
    SDLK_3                      :: define u32 = 0x00000033;
    SDLK_4                      :: define u32 = 0x00000034;
    SDLK_5                      :: define u32 = 0x00000035;
    SDLK_6                      :: define u32 = 0x00000036;
    SDLK_7                      :: define u32 = 0x00000037;
    SDLK_8                      :: define u32 = 0x00000038;
    SDLK_9                      :: define u32 = 0x00000039;
    SDLK_COLON                  :: define u32 = 0x0000003a;
    SDLK_SEMICOLON              :: define u32 = 0x0000003b;
    SDLK_LESS                   :: define u32 = 0x0000003c;
    SDLK_EQUALS                 :: define u32 = 0x0000003d;
    SDLK_GREATER                :: define u32 = 0x0000003e;
    SDLK_QUESTION               :: define u32 = 0x0000003f;
    SDLK_AT                     :: define u32 = 0x00000040;
    SDLK_LEFTBRACKET            :: define u32 = 0x0000005b;
    SDLK_BACKSLASH              :: define u32 = 0x0000005c;
    SDLK_RIGHTBRACKET           :: define u32 = 0x0000005d;
    SDLK_CARET                  :: define u32 = 0x0000005e;
    SDLK_UNDERSCORE             :: define u32 = 0x0000005f;
    SDLK_GRAVE                  :: define u32 = 0x00000060;
    SDLK_A                      :: define u32 = 0x00000061;
    SDLK_B                      :: define u32 = 0x00000062;
    SDLK_C                      :: define u32 = 0x00000063;
    SDLK_D                      :: define u32 = 0x00000064;
    SDLK_E                      :: define u32 = 0x00000065;
    SDLK_F                      :: define u32 = 0x00000066;
    SDLK_G                      :: define u32 = 0x00000067;
    SDLK_H                      :: define u32 = 0x00000068;
    SDLK_I                      :: define u32 = 0x00000069;
    SDLK_J                      :: define u32 = 0x0000006a;
    SDLK_K                      :: define u32 = 0x0000006b;
    SDLK_L                      :: define u32 = 0x0000006c;
    SDLK_M                      :: define u32 = 0x0000006d;
    SDLK_N                      :: define u32 = 0x0000006e;
    SDLK_O                      :: define u32 = 0x0000006f;
    SDLK_P                      :: define u32 = 0x00000070;
    SDLK_Q                      :: define u32 = 0x00000071;
    SDLK_R                      :: define u32 = 0x00000072;
    SDLK_S                      :: define u32 = 0x00000073;
    SDLK_T                      :: define u32 = 0x00000074;
    SDLK_U                      :: define u32 = 0x00000075;
    SDLK_V                      :: define u32 = 0x00000076;
    SDLK_W                      :: define u32 = 0x00000077;
    SDLK_X                      :: define u32 = 0x00000078;
    SDLK_Y                      :: define u32 = 0x00000079;
    SDLK_Z                      :: define u32 = 0x0000007a;
    SDLK_LEFTBRACE              :: define u32 = 0x0000007b;
    SDLK_PIPE                   :: define u32 = 0x0000007c;
    SDLK_RIGHTBRACE             :: define u32 = 0x0000007d;
    SDLK_TILDE                  :: define u32 = 0x0000007e;
    SDLK_DELETE                 :: define u32 = 0x0000007f;
    SDLK_PLUSMINUS              :: define u32 = 0x000000b1;
    SDLK_CAPSLOCK               :: define u32 = 0x40000039;
    SDLK_F1                     :: define u32 = 0x4000003a;
    SDLK_F2                     :: define u32 = 0x4000003b;
    SDLK_F3                     :: define u32 = 0x4000003c;
    SDLK_F4                     :: define u32 = 0x4000003d;
    SDLK_F5                     :: define u32 = 0x4000003e;
    SDLK_F6                     :: define u32 = 0x4000003f;
    SDLK_F7                     :: define u32 = 0x40000040;
    SDLK_F8                     :: define u32 = 0x40000041;
    SDLK_F9                     :: define u32 = 0x40000042;
    SDLK_F10                    :: define u32 = 0x40000043;
    SDLK_F11                    :: define u32 = 0x40000044;
    SDLK_F12                    :: define u32 = 0x40000045;
    SDLK_PRINTSCREEN            :: define u32 = 0x40000046;
    SDLK_SCROLLLOCK             :: define u32 = 0x40000047;
    SDLK_PAUSE                  :: define u32 = 0x40000048;
    SDLK_INSERT                 :: define u32 = 0x40000049;
    SDLK_HOME                   :: define u32 = 0x4000004a;
    SDLK_PAGEUP                 :: define u32 = 0x4000004b;
    SDLK_END                    :: define u32 = 0x4000004d;
    SDLK_PAGEDOWN               :: define u32 = 0x4000004e;
    SDLK_RIGHT                  :: define u32 = 0x4000004f;
    SDLK_LEFT                   :: define u32 = 0x40000050;
    SDLK_DOWN                   :: define u32 = 0x40000051;
    SDLK_UP                     :: define u32 = 0x40000052;
    SDLK_NUMLOCKCLEAR           :: define u32 = 0x40000053;
    SDLK_KP_DIVIDE              :: define u32 = 0x40000054;
    SDLK_KP_MULTIPLY            :: define u32 = 0x40000055;
    SDLK_KP_MINUS               :: define u32 = 0x40000056;
    SDLK_KP_PLUS                :: define u32 = 0x40000057;
    SDLK_KP_ENTER               :: define u32 = 0x40000058;
    SDLK_KP_1                   :: define u32 = 0x40000059;
    SDLK_KP_2                   :: define u32 = 0x4000005a;
    SDLK_KP_3                   :: define u32 = 0x4000005b;
    SDLK_KP_4                   :: define u32 = 0x4000005c;
    SDLK_KP_5                   :: define u32 = 0x4000005d;
    SDLK_KP_6                   :: define u32 = 0x4000005e;
    SDLK_KP_7                   :: define u32 = 0x4000005f;
    SDLK_KP_8                   :: define u32 = 0x40000060;
    SDLK_KP_9                   :: define u32 = 0x40000061;
    SDLK_KP_0                   :: define u32 = 0x40000062;
    SDLK_KP_PERIOD              :: define u32 = 0x40000063;
    SDLK_APPLICATION            :: define u32 = 0x40000065;
    SDLK_POWER                  :: define u32 = 0x40000066;
    SDLK_KP_EQUALS              :: define u32 = 0x40000067;
    SDLK_F13                    :: define u32 = 0x40000068;
    SDLK_F14                    :: define u32 = 0x40000069;
    SDLK_F15                    :: define u32 = 0x4000006a;
    SDLK_F16                    :: define u32 = 0x4000006b;
    SDLK_F17                    :: define u32 = 0x4000006c;
    SDLK_F18                    :: define u32 = 0x4000006d;
    SDLK_F19                    :: define u32 = 0x4000006e;
    SDLK_F20                    :: define u32 = 0x4000006f;
    SDLK_F21                    :: define u32 = 0x40000070;
    SDLK_F22                    :: define u32 = 0x40000071;
    SDLK_F23                    :: define u32 = 0x40000072;
    SDLK_F24                    :: define u32 = 0x40000073;
    SDLK_EXECUTE                :: define u32 = 0x40000074;
    SDLK_HELP                   :: define u32 = 0x40000075;
    SDLK_MENU                   :: define u32 = 0x40000076;
    SDLK_SELECT                 :: define u32 = 0x40000077;
    SDLK_STOP                   :: define u32 = 0x40000078;
    SDLK_AGAIN                  :: define u32 = 0x40000079;
    SDLK_UNDO                   :: define u32 = 0x4000007a;
    SDLK_CUT                    :: define u32 = 0x4000007b;
    SDLK_COPY                   :: define u32 = 0x4000007c;
    SDLK_PASTE                  :: define u32 = 0x4000007d;
    SDLK_FIND                   :: define u32 = 0x4000007e;
    SDLK_MUTE                   :: define u32 = 0x4000007f;
    SDLK_VOLUMEUP               :: define u32 = 0x40000080;
    SDLK_VOLUMEDOWN             :: define u32 = 0x40000081;
    SDLK_KP_COMMA               :: define u32 = 0x40000085;
    SDLK_KP_EQUALSAS400         :: define u32 = 0x40000086;
    SDLK_ALTERASE               :: define u32 = 0x40000099;
    SDLK_SYSREQ                 :: define u32 = 0x4000009a;
    SDLK_CANCEL                 :: define u32 = 0x4000009b;
    SDLK_CLEAR                  :: define u32 = 0x4000009c;
    SDLK_PRIOR                  :: define u32 = 0x4000009d;
    SDLK_RETURN2                :: define u32 = 0x4000009e;
    SDLK_SEPARATOR              :: define u32 = 0x4000009f;
    SDLK_OUT                    :: define u32 = 0x400000a0;
    SDLK_OPER                   :: define u32 = 0x400000a1;
    SDLK_CLEARAGAIN             :: define u32 = 0x400000a2;
    SDLK_CRSEL                  :: define u32 = 0x400000a3;
    SDLK_EXSEL                  :: define u32 = 0x400000a4;
    SDLK_KP_00                  :: define u32 = 0x400000b0;
    SDLK_KP_000                 :: define u32 = 0x400000b1;
    SDLK_THOUSANDSSEPARATOR     :: define u32 = 0x400000b2;
    SDLK_DECIMALSEPARATOR       :: define u32 = 0x400000b3;
    SDLK_CURRENCYUNIT           :: define u32 = 0x400000b4;
    SDLK_CURRENCYSUBUNIT        :: define u32 = 0x400000b5;
    SDLK_KP_LEFTPAREN           :: define u32 = 0x400000b6;
    SDLK_KP_RIGHTPAREN          :: define u32 = 0x400000b7;
    SDLK_KP_LEFTBRACE           :: define u32 = 0x400000b8;
    SDLK_KP_RIGHTBRACE          :: define u32 = 0x400000b9;
    SDLK_KP_TAB                 :: define u32 = 0x400000ba;
    SDLK_KP_BACKSPACE           :: define u32 = 0x400000bb;
    SDLK_KP_A                   :: define u32 = 0x400000bc;
    SDLK_KP_B                   :: define u32 = 0x400000bd;
    SDLK_KP_C                   :: define u32 = 0x400000be;
    SDLK_KP_D                   :: define u32 = 0x400000bf;
    SDLK_KP_E                   :: define u32 = 0x400000c0;
    SDLK_KP_F                   :: define u32 = 0x400000c1;
    SDLK_KP_XOR                 :: define u32 = 0x400000c2;
    SDLK_KP_POWER               :: define u32 = 0x400000c3;
    SDLK_KP_PERCENT             :: define u32 = 0x400000c4;
    SDLK_KP_LESS                :: define u32 = 0x400000c5;
    SDLK_KP_GREATER             :: define u32 = 0x400000c6;
    SDLK_KP_AMPERSAND           :: define u32 = 0x400000c7;
    SDLK_KP_DBLAMPERSAND        :: define u32 = 0x400000c8;
    SDLK_KP_VERTICALBAR         :: define u32 = 0x400000c9;
    SDLK_KP_DBLVERTICALBAR      :: define u32 = 0x400000ca;
    SDLK_KP_COLON               :: define u32 = 0x400000cb;
    SDLK_KP_HASH                :: define u32 = 0x400000cc;
    SDLK_KP_SPACE               :: define u32 = 0x400000cd;
    SDLK_KP_AT                  :: define u32 = 0x400000ce;
    SDLK_KP_EXCLAM              :: define u32 = 0x400000cf;
    SDLK_KP_MEMSTORE            :: define u32 = 0x400000d0;
    SDLK_KP_MEMRECALL           :: define u32 = 0x400000d1;
    SDLK_KP_MEMCLEAR            :: define u32 = 0x400000d2;
    SDLK_KP_MEMADD              :: define u32 = 0x400000d3;
    SDLK_KP_MEMSUBTRACT         :: define u32 = 0x400000d4;
    SDLK_KP_MEMMULTIPLY         :: define u32 = 0x400000d5;
    SDLK_KP_MEMDIVIDE           :: define u32 = 0x400000d6;
    SDLK_KP_PLUSMINUS           :: define u32 = 0x400000d7;
    SDLK_KP_CLEAR               :: define u32 = 0x400000d8;
    SDLK_KP_CLEARENTRY          :: define u32 = 0x400000d9;
    SDLK_KP_BINARY              :: define u32 = 0x400000da;
    SDLK_KP_OCTAL               :: define u32 = 0x400000db;
    SDLK_KP_DECIMAL             :: define u32 = 0x400000dc;
    SDLK_KP_HEXADECIMAL         :: define u32 = 0x400000dd;
    SDLK_LCTRL                  :: define u32 = 0x400000e0;
    SDLK_LSHIFT                 :: define u32 = 0x400000e1;
    SDLK_LALT                   :: define u32 = 0x400000e2;
    SDLK_LGUI                   :: define u32 = 0x400000e3;
    SDLK_RCTRL                  :: define u32 = 0x400000e4;
    SDLK_RSHIFT                 :: define u32 = 0x400000e5;
    SDLK_RALT                   :: define u32 = 0x400000e6;
    SDLK_RGUI                   :: define u32 = 0x400000e7;
    SDLK_MODE                   :: define u32 = 0x40000101;
    SDLK_SLEEP                  :: define u32 = 0x40000102;
    SDLK_WAKE                   :: define u32 = 0x40000103;
    SDLK_CHANNEL_INCREMENT      :: define u32 = 0x40000104;
    SDLK_CHANNEL_DECREMENT      :: define u32 = 0x40000105;
    SDLK_MEDIA_PLAY             :: define u32 = 0x40000106;
    SDLK_MEDIA_PAUSE            :: define u32 = 0x40000107;
    SDLK_MEDIA_RECORD           :: define u32 = 0x40000108;
    SDLK_MEDIA_FAST_FORWARD     :: define u32 = 0x40000109;
    SDLK_MEDIA_REWIND           :: define u32 = 0x4000010a;
    SDLK_MEDIA_NEXT_TRACK       :: define u32 = 0x4000010b;
    SDLK_MEDIA_PREVIOUS_TRACK   :: define u32 = 0x4000010c;
    SDLK_MEDIA_STOP             :: define u32 = 0x4000010d;
    SDLK_MEDIA_EJECT            :: define u32 = 0x4000010e;
    SDLK_MEDIA_PLAY_PAUSE       :: define u32 = 0x4000010f;
    SDLK_MEDIA_SELECT           :: define u32 = 0x40000110;
    SDLK_AC_NEW                 :: define u32 = 0x40000111;
    SDLK_AC_OPEN                :: define u32 = 0x40000112;
    SDLK_AC_CLOSE               :: define u32 = 0x40000113;
    SDLK_AC_EXIT                :: define u32 = 0x40000114;
    SDLK_AC_SAVE                :: define u32 = 0x40000115;
    SDLK_AC_PRINT               :: define u32 = 0x40000116;
    SDLK_AC_PROPERTIES          :: define u32 = 0x40000117;
    SDLK_AC_SEARCH              :: define u32 = 0x40000118;
    SDLK_AC_HOME                :: define u32 = 0x40000119;
    SDLK_AC_BACK                :: define u32 = 0x4000011a;
    SDLK_AC_FORWARD             :: define u32 = 0x4000011b;
    SDLK_AC_STOP                :: define u32 = 0x4000011c;
    SDLK_AC_REFRESH             :: define u32 = 0x4000011d;
    SDLK_AC_BOOKMARKS           :: define u32 = 0x4000011e;
    SDLK_SOFTLEFT               :: define u32 = 0x4000011f;
    SDLK_SOFTRIGHT              :: define u32 = 0x40000120;
    SDLK_CALL                   :: define u32 = 0x40000121;
    SDLK_ENDCALL                :: define u32 = 0x40000122;

    sdl_keymod :: type_alias = u16;

    SDL_KMOD_NONE   :: define u16 = 0x0000;
    SDL_KMOD_LSHIFT :: define u16 = 0x0001;
    SDL_KMOD_RSHIFT :: define u16 = 0x0002;
    SDL_KMOD_LCTRL  :: define u16 = 0x0040;
    SDL_KMOD_RCTRL  :: define u16 = 0x0080;
    SDL_KMOD_LALT   :: define u16 = 0x0100;
    SDL_KMOD_RALT   :: define u16 = 0x0200;
    SDL_KMOD_LGUI   :: define u16 = 0x0400;
    SDL_KMOD_RGUI   :: define u16 = 0x0800;
    SDL_KMOD_NUM    :: define u16 = 0x1000;
    SDL_KMOD_CAPS   :: define u16 = 0x2000;
    SDL_KMOD_MODE   :: define u16 = 0x4000; 
    SDL_KMOD_SCROLL :: define u16 = 0x8000;
    SDL_KMOD_CTRL   :: define u16 = (SDL_KMOD_LCTRL | SDL_KMOD_RCTRL); 
    SDL_KMOD_SHIFT  :: define u16 = (SDL_KMOD_LSHIFT | SDL_KMOD_RSHIFT);
    SDL_KMOD_ALT    :: define u16 = (SDL_KMOD_LALT | SDL_KMOD_RALT); 
    SDL_KMOD_GUI    :: define u16 = (SDL_KMOD_LGUI | SDL_KMOD_RGUI);   

}

sdl_scancode_to_keycode :: fn (x: u32) -> u32 
{
    return (x | SDLK_SCANCODE_MASK);
}

